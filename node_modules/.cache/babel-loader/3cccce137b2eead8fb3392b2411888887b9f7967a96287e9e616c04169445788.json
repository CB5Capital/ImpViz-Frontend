{"ast":null,"code":"var _jsxFileName = \"/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './App.css';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport MarketSummary from './components/MarketSummary';\nimport MarketSelector from './components/MarketSelector';\nimport SignalDisplay from './components/SignalDisplay';\nimport HistoricalChart from './components/HistoricalChart';\nimport { useWebSocket } from './hooks/useWebSocket';\nimport { processMarketData, convertSignalsToMarketFormat } from './utils/dataProcessing';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [environment, setEnvironment] = useState('prod');\n  const [selectedMarket, setSelectedMarket] = useState('ES');\n  const [marketData, setMarketData] = useState({});\n  const [scoreHistory, setScoreHistory] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('DISCONNECTED');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const websocketUrl = environment === 'local' ? 'ws://localhost:8765' : 'ws://134.209.184.5:8765';\n  const onMessage = useCallback(data => {\n    if (data.type === 'error') {\n      console.error('WebSocket error:', data.message);\n      return;\n    }\n    const rawData = data.data || {};\n    let processedData;\n    if ('signals_by_market' in rawData) {\n      processedData = convertSignalsToMarketFormat(rawData);\n    } else {\n      processedData = rawData;\n    }\n    setMarketData(processedData);\n    setLastUpdate(new Date());\n    if (processedData[selectedMarket]) {\n      updateScoreHistory(processedData[selectedMarket]);\n    }\n  }, [selectedMarket]);\n  const {\n    sendMessage,\n    isConnected\n  } = useWebSocket(websocketUrl, onMessage, () => setConnectionStatus('Connected'), () => setConnectionStatus('DISCONNECTED'));\n  useEffect(() => {\n    if (isConnected) {\n      sendMessage({\n        type: 'get_latest'\n      });\n      const interval = setInterval(() => {\n        sendMessage({\n          type: 'get_latest'\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isConnected, sendMessage]);\n  const updateScoreHistory = marketInfo => {\n    const longData = marketInfo.Long || {};\n    const shortData = marketInfo.Short || {};\n    const longScore = longData.final_score || 0;\n    const shortScore = shortData.final_score || 0;\n    const netDifference = Math.abs(longScore - shortScore);\n    const winner = longScore > shortScore ? 'LONG' : shortScore > longScore ? 'SHORT' : 'NEUTRAL';\n    setScoreHistory(prev => {\n      const newHistory = [...prev, {\n        timestamp: new Date(),\n        longScore,\n        shortScore,\n        netDifference,\n        winner\n      }];\n      const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);\n      return newHistory.filter(item => item.timestamp > fiveMinutesAgo);\n    });\n  };\n  const availableMarkets = Object.keys(marketData).sort();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ImpViz Active Trader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConnectionStatus, {\n        status: connectionStatus,\n        lastUpdate: lastUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(MarketSelector, {\n        markets: availableMarkets,\n        selectedMarket: selectedMarket,\n        onMarketChange: setSelectedMarket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"env-toggle\",\n        onClick: () => setEnvironment(env => env === 'prod' ? 'local' : 'prod'),\n        children: environment === 'prod' ? 'Production' : 'Local'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarketSummary, {\n      marketData: marketData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), marketData[selectedMarket] && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SignalDisplay, {\n        marketData: marketData[selectedMarket],\n        marketName: selectedMarket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HistoricalChart, {\n        scoreHistory: scoreHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g7i0zo9myIkSWfQ71gg2rQ5poVA=\", false, function () {\n  return [useWebSocket];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","ConnectionStatus","MarketSummary","MarketSelector","SignalDisplay","HistoricalChart","useWebSocket","processMarketData","convertSignalsToMarketFormat","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","environment","setEnvironment","selectedMarket","setSelectedMarket","marketData","setMarketData","scoreHistory","setScoreHistory","connectionStatus","setConnectionStatus","lastUpdate","setLastUpdate","websocketUrl","onMessage","data","type","console","error","message","rawData","processedData","Date","updateScoreHistory","sendMessage","isConnected","interval","setInterval","clearInterval","marketInfo","longData","Long","shortData","Short","longScore","final_score","shortScore","netDifference","Math","abs","winner","prev","newHistory","timestamp","fiveMinutesAgo","now","filter","item","availableMarkets","Object","keys","sort","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","markets","onMarketChange","onClick","env","marketName","_c","$RefreshReg$"],"sources":["/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './App.css';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport MarketSummary from './components/MarketSummary';\nimport MarketSelector from './components/MarketSelector';\nimport SignalDisplay from './components/SignalDisplay';\nimport HistoricalChart from './components/HistoricalChart';\nimport { useWebSocket } from './hooks/useWebSocket';\nimport { processMarketData, convertSignalsToMarketFormat } from './utils/dataProcessing';\n\nfunction App() {\n  const [environment, setEnvironment] = useState('prod');\n  const [selectedMarket, setSelectedMarket] = useState('ES');\n  const [marketData, setMarketData] = useState({});\n  const [scoreHistory, setScoreHistory] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('DISCONNECTED');\n  const [lastUpdate, setLastUpdate] = useState(null);\n\n  const websocketUrl = environment === 'local' \n    ? 'ws://localhost:8765' \n    : 'ws://134.209.184.5:8765';\n\n  const onMessage = useCallback((data) => {\n    if (data.type === 'error') {\n      console.error('WebSocket error:', data.message);\n      return;\n    }\n\n    const rawData = data.data || {};\n    \n    let processedData;\n    if ('signals_by_market' in rawData) {\n      processedData = convertSignalsToMarketFormat(rawData);\n    } else {\n      processedData = rawData;\n    }\n    \n    setMarketData(processedData);\n    setLastUpdate(new Date());\n    \n    if (processedData[selectedMarket]) {\n      updateScoreHistory(processedData[selectedMarket]);\n    }\n  }, [selectedMarket]);\n\n  const { sendMessage, isConnected } = useWebSocket(\n    websocketUrl,\n    onMessage,\n    () => setConnectionStatus('Connected'),\n    () => setConnectionStatus('DISCONNECTED')\n  );\n\n  useEffect(() => {\n    if (isConnected) {\n      sendMessage({ type: 'get_latest' });\n      const interval = setInterval(() => {\n        sendMessage({ type: 'get_latest' });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isConnected, sendMessage]);\n\n  const updateScoreHistory = (marketInfo) => {\n    const longData = marketInfo.Long || {};\n    const shortData = marketInfo.Short || {};\n    \n    const longScore = longData.final_score || 0;\n    const shortScore = shortData.final_score || 0;\n    \n    const netDifference = Math.abs(longScore - shortScore);\n    const winner = longScore > shortScore ? 'LONG' : shortScore > longScore ? 'SHORT' : 'NEUTRAL';\n    \n    setScoreHistory(prev => {\n      const newHistory = [...prev, {\n        timestamp: new Date(),\n        longScore,\n        shortScore,\n        netDifference,\n        winner\n      }];\n      \n      const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);\n      return newHistory.filter(item => item.timestamp > fiveMinutesAgo);\n    });\n  };\n\n  const availableMarkets = Object.keys(marketData).sort();\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>ImpViz Active Trader</h1>\n        <ConnectionStatus status={connectionStatus} lastUpdate={lastUpdate} />\n      </header>\n      \n      <div className=\"controls\">\n        <MarketSelector \n          markets={availableMarkets}\n          selectedMarket={selectedMarket}\n          onMarketChange={setSelectedMarket}\n        />\n        <button \n          className=\"env-toggle\"\n          onClick={() => setEnvironment(env => env === 'prod' ? 'local' : 'prod')}\n        >\n          {environment === 'prod' ? 'Production' : 'Local'}\n        </button>\n      </div>\n\n      <MarketSummary marketData={marketData} />\n      \n      {marketData[selectedMarket] && (\n        <>\n          <SignalDisplay \n            marketData={marketData[selectedMarket]}\n            marketName={selectedMarket}\n          />\n          <HistoricalChart scoreHistory={scoreHistory} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}