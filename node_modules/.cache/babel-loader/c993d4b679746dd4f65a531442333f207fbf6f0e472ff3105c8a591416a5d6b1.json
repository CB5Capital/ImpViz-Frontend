{"ast":null,"code":"var _jsxFileName = \"/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/components/ConnectionStatus.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionStatus = ({\n  status,\n  lastUpdate\n}) => {\n  const isConnected = status === 'Connected';\n  const formatTime = date => {\n    if (!date) return '--:--:--';\n    return date.toLocaleTimeString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connection-status\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-indicator ${isConnected ? 'connected' : 'disconnected'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"last-update\",\n      children: [\"Last Update: \", formatTime(lastUpdate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = ConnectionStatus;\nexport default ConnectionStatus;\nvar _c;\n$RefreshReg$(_c, \"ConnectionStatus\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ConnectionStatus","status","lastUpdate","isConnected","formatTime","date","toLocaleTimeString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/components/ConnectionStatus.js"],"sourcesContent":["import React from 'react';\n\nconst ConnectionStatus = ({ status, lastUpdate }) => {\n  const isConnected = status === 'Connected';\n  \n  const formatTime = (date) => {\n    if (!date) return '--:--:--';\n    return date.toLocaleTimeString();\n  };\n  \n  return (\n    <div className=\"connection-status\">\n      <div className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}>\n        <span className=\"status-dot\"></span>\n        <span>{status}</span>\n      </div>\n      <div className=\"last-update\">\n        Last Update: {formatTime(lastUpdate)}\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectionStatus;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAW,CAAC,KAAK;EACnD,MAAMC,WAAW,GAAGF,MAAM,KAAK,WAAW;EAE1C,MAAMG,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAI,CAACA,IAAI,EAAE,OAAO,UAAU;IAC5B,OAAOA,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAClC,CAAC;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCT,OAAA;MAAKQ,SAAS,EAAE,oBAAoBJ,WAAW,GAAG,WAAW,GAAG,cAAc,EAAG;MAAAK,QAAA,gBAC/ET,OAAA;QAAMQ,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCb,OAAA;QAAAS,QAAA,EAAOP;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACNb,OAAA;MAAKQ,SAAS,EAAC,aAAa;MAAAC,QAAA,GAAC,eACd,EAACJ,UAAU,CAACF,UAAU,CAAC;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GAnBIb,gBAAgB;AAqBtB,eAAeA,gBAAgB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}