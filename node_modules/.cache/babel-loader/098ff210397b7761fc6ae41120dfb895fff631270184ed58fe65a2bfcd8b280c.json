{"ast":null,"code":"var _jsxFileName = \"/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/components/StrategyHeatmap.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StrategyHeatmap = ({\n  data\n}) => {\n  var _data$data;\n  // Check for data in the nested structure\n  const heatmapData = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.signals_by_tag_and_direction_and_market;\n  if (!heatmapData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"STRATEGY METRICS HEATMAP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waiting-message\",\n        children: \"Waiting for data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n  const tagData = heatmapData;\n  const market = 'NQ'; // Default market\n\n  if (!tagData[market]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"STRATEGY METRICS HEATMAP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waiting-message\",\n        children: [\"No data available for \", market]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n  const marketData = tagData[market];\n  const metrics = ['avg_hit_rate', 'avg_pnl_per_trade', 'avg_duration', 'avg_drawdown', 'avg_risk_reward_ratio', 'sample_size', 'active_signals'];\n  const metricLabels = {\n    'avg_hit_rate': 'Hit%',\n    'avg_pnl_per_trade': 'P&L',\n    'avg_duration': 'Dur(m)',\n    'avg_drawdown': 'DD',\n    'avg_risk_reward_ratio': 'R/R',\n    'sample_size': 'Avg Size',\n    'active_signals': 'Active%'\n  };\n  const strategyColors = {\n    'Trend Following': {\n      bg: '#1a2332',\n      long: '#4a9eff',\n      short: '#7bb3ff',\n      header: '#6bb6ff'\n    },\n    'Mean Reversion': {\n      bg: '#2d1b32',\n      long: '#9d4edd',\n      short: '#b968db',\n      header: '#d084f0'\n    },\n    'Trend Reversal': {\n      bg: '#2a1f1a',\n      long: '#ff8c42',\n      short: '#ffaa66',\n      header: '#ffcc88'\n    }\n  };\n  const formatValue = (metric, value, dirData) => {\n    switch (metric) {\n      case 'avg_hit_rate':\n        return `${value.toFixed(1)}%`;\n      case 'avg_pnl_per_trade':\n        return `$${value.toFixed(0)}`;\n      case 'avg_duration':\n        return `${value.toFixed(0)}m`;\n      case 'avg_drawdown':\n        return `$${value.toFixed(0)}`;\n      case 'avg_risk_reward_ratio':\n        return value.toFixed(2);\n      case 'sample_size':\n        const signalsCount = dirData.signals || 1;\n        const sizePerSignal = signalsCount > 0 ? value / signalsCount : 0;\n        return sizePerSignal.toFixed(0);\n      case 'active_signals':\n        return `${value.toFixed(1)}%`;\n      default:\n        return value.toString();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"heatmap-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"STRATEGY METRICS HEATMAP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell strategy-label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), metrics.map(metric => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell metric-label\",\n          children: metricLabels[metric]\n        }, metric, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), Object.keys(marketData).map(strategy => {\n        const colors = strategyColors[strategy] || {\n          bg: '#1a1f3a',\n          long: '#00ff88',\n          short: '#ff4444',\n          header: '#ffaa00'\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"strategy-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"strategy-header\",\n            style: {\n              color: colors.header\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"strategy-name\",\n              children: strategy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), ['Long', 'Short'].map(direction => {\n            if (!marketData[strategy][direction]) return null;\n            const dirData = marketData[strategy][direction];\n            const dirColor = direction === 'Long' ? colors.long : colors.short;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"direction-row\",\n              style: {\n                backgroundColor: colors.bg\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"direction-label\",\n                style: {\n                  color: dirColor\n                },\n                children: direction\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this), metrics.map(metric => {\n                const value = dirData[metric] || 0;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"metric-cell\",\n                  children: formatValue(metric, value, dirData)\n                }, metric, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 25\n                }, this);\n              })]\n            }, direction, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this);\n          })]\n        }, strategy, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_c = StrategyHeatmap;\nexport default StrategyHeatmap;\nvar _c;\n$RefreshReg$(_c, \"StrategyHeatmap\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StrategyHeatmap","data","_data$data","heatmapData","signals_by_tag_and_direction_and_market","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tagData","market","marketData","metrics","metricLabels","strategyColors","bg","long","short","header","formatValue","metric","value","dirData","toFixed","signalsCount","signals","sizePerSignal","toString","map","Object","keys","strategy","colors","style","color","direction","dirColor","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/components/StrategyHeatmap.js"],"sourcesContent":["import React from 'react';\n\nconst StrategyHeatmap = ({ data }) => {\n  // Check for data in the nested structure\n  const heatmapData = data?.data?.signals_by_tag_and_direction_and_market;\n  \n  if (!heatmapData) {\n    return (\n      <div className=\"heatmap-section\">\n        <h3>STRATEGY METRICS HEATMAP</h3>\n        <div className=\"waiting-message\">Waiting for data...</div>\n      </div>\n    );\n  }\n\n  const tagData = heatmapData;\n  const market = 'NQ'; // Default market\n  \n  if (!tagData[market]) {\n    return (\n      <div className=\"heatmap-section\">\n        <h3>STRATEGY METRICS HEATMAP</h3>\n        <div className=\"waiting-message\">No data available for {market}</div>\n      </div>\n    );\n  }\n\n  const marketData = tagData[market];\n  \n  const metrics = [\n    'avg_hit_rate', \n    'avg_pnl_per_trade', \n    'avg_duration', \n    'avg_drawdown', \n    'avg_risk_reward_ratio', \n    'sample_size', \n    'active_signals'\n  ];\n  \n  const metricLabels = {\n    'avg_hit_rate': 'Hit%',\n    'avg_pnl_per_trade': 'P&L',\n    'avg_duration': 'Dur(m)',\n    'avg_drawdown': 'DD',\n    'avg_risk_reward_ratio': 'R/R',\n    'sample_size': 'Avg Size',\n    'active_signals': 'Active%'\n  };\n\n  const strategyColors = {\n    'Trend Following': {\n      bg: '#1a2332',\n      long: '#4a9eff',\n      short: '#7bb3ff',\n      header: '#6bb6ff'\n    },\n    'Mean Reversion': {\n      bg: '#2d1b32',\n      long: '#9d4edd',\n      short: '#b968db',\n      header: '#d084f0'\n    },\n    'Trend Reversal': {\n      bg: '#2a1f1a',\n      long: '#ff8c42',\n      short: '#ffaa66',\n      header: '#ffcc88'\n    }\n  };\n\n  const formatValue = (metric, value, dirData) => {\n    switch (metric) {\n      case 'avg_hit_rate':\n        return `${value.toFixed(1)}%`;\n      case 'avg_pnl_per_trade':\n        return `$${value.toFixed(0)}`;\n      case 'avg_duration':\n        return `${value.toFixed(0)}m`;\n      case 'avg_drawdown':\n        return `$${value.toFixed(0)}`;\n      case 'avg_risk_reward_ratio':\n        return value.toFixed(2);\n      case 'sample_size':\n        const signalsCount = dirData.signals || 1;\n        const sizePerSignal = signalsCount > 0 ? value / signalsCount : 0;\n        return sizePerSignal.toFixed(0);\n      case 'active_signals':\n        return `${value.toFixed(1)}%`;\n      default:\n        return value.toString();\n    }\n  };\n\n  return (\n    <div className=\"heatmap-section\">\n      <h3>STRATEGY METRICS HEATMAP</h3>\n      \n      <div className=\"heatmap-container\">\n        {/* Header Row */}\n        <div className=\"heatmap-header\">\n          <div className=\"header-cell strategy-label\"></div>\n          {metrics.map(metric => (\n            <div key={metric} className=\"header-cell metric-label\">\n              {metricLabels[metric]}\n            </div>\n          ))}\n        </div>\n\n        {/* Strategy Rows */}\n        {Object.keys(marketData).map(strategy => {\n          const colors = strategyColors[strategy] || {\n            bg: '#1a1f3a',\n            long: '#00ff88',\n            short: '#ff4444',\n            header: '#ffaa00'\n          };\n\n          return (\n            <div key={strategy} className=\"strategy-group\">\n              {/* Strategy Label Row */}\n              <div className=\"strategy-header\" style={{ color: colors.header }}>\n                <div className=\"strategy-name\">{strategy}</div>\n              </div>\n\n              {/* Direction Rows */}\n              {['Long', 'Short'].map(direction => {\n                if (!marketData[strategy][direction]) return null;\n                \n                const dirData = marketData[strategy][direction];\n                const dirColor = direction === 'Long' ? colors.long : colors.short;\n\n                return (\n                  <div \n                    key={direction} \n                    className=\"direction-row\"\n                    style={{ backgroundColor: colors.bg }}\n                  >\n                    <div \n                      className=\"direction-label\"\n                      style={{ color: dirColor }}\n                    >\n                      {direction}\n                    </div>\n                    {metrics.map(metric => {\n                      const value = dirData[metric] || 0;\n                      return (\n                        <div key={metric} className=\"metric-cell\">\n                          {formatValue(metric, value, dirData)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default StrategyHeatmap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}