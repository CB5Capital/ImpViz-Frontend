{"ast":null,"code":"var _jsxFileName = \"/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport StrategyHeatmap from './components/StrategyHeatmap';\nimport ScoreChart from './components/ScoreChart';\nimport MarketSection from './components/MarketSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [environment, setEnvironment] = useState('prod');\n  const [marketData, setMarketData] = useState({});\n  const [scoreHistory, setScoreHistory] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('DISCONNECTED');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const wsRef = useRef(null);\n  const websocketUrl = environment === 'local' ? 'ws://localhost:8765' : 'ws://134.209.184.5:8765';\n  useEffect(() => {\n    const connect = () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      console.log(`🔌 Connecting to ${websocketUrl}`);\n      try {\n        const ws = new WebSocket(websocketUrl);\n        ws.onopen = () => {\n          console.log('✅ Connected successfully!');\n          setConnectionStatus('Connected');\n          ws.send(JSON.stringify({\n            type: 'get_latest'\n          }));\n\n          // Periodic requests every 5 seconds\n          const interval = setInterval(() => {\n            if (ws.readyState === WebSocket.OPEN) {\n              ws.send(JSON.stringify({\n                type: 'get_latest'\n              }));\n            }\n          }, 5000);\n          ws.interval = interval;\n        };\n        ws.onmessage = event => {\n          try {\n            const data = JSON.parse(event.data);\n            console.log('📦 Received data with keys:', Object.keys(data));\n            console.log('📋 Full data structure:', data);\n            if (data.type === 'pong') return;\n\n            // Check for different data structures\n            if (data.data) {\n              console.log('🔍 Found data.data with keys:', Object.keys(data.data));\n              if (data.data.signals_by_tag_and_direction_and_market) {\n                console.log('✅ Found heatmap data in data.data');\n              }\n            }\n            if (data.signals_by_tag_and_direction_and_market) {\n              console.log('✅ Found heatmap data at root level');\n            }\n\n            // Store the complete data object\n            setMarketData(data);\n            setLastUpdate(new Date());\n\n            // Update score history for chart\n            updateScoreHistory(data);\n          } catch (error) {\n            console.error('❌ Error processing data:', error);\n          }\n        };\n        ws.onerror = error => {\n          console.error('❌ WebSocket error:', error);\n          setConnectionStatus('ERROR');\n        };\n        ws.onclose = event => {\n          console.log('🔌 WebSocket closed:', event.code);\n          setConnectionStatus('DISCONNECTED');\n          if (ws.interval) clearInterval(ws.interval);\n\n          // Reconnect after delay\n          setTimeout(() => {\n            connect();\n          }, 5000);\n        };\n        wsRef.current = ws;\n      } catch (error) {\n        console.error('❌ Failed to connect:', error);\n        setConnectionStatus('ERROR');\n      }\n    };\n    connect();\n    return () => {\n      if (wsRef.current) {\n        if (wsRef.current.interval) {\n          clearInterval(wsRef.current.interval);\n        }\n        wsRef.current.close();\n      }\n    };\n  }, [websocketUrl]);\n  const updateScoreHistory = data => {\n    // Extract score data from the received data\n    if (data.data && data.data.signals_by_market && data.data.signals_by_market.NQ) {\n      var _nqData$Long, _nqData$Short;\n      const nqData = data.data.signals_by_market.NQ;\n      console.log('📊 NQ Data for score calculation:', nqData);\n      const longScore = ((_nqData$Long = nqData.Long) === null || _nqData$Long === void 0 ? void 0 : _nqData$Long.final_score) || 0;\n      const shortScore = ((_nqData$Short = nqData.Short) === null || _nqData$Short === void 0 ? void 0 : _nqData$Short.final_score) || 0;\n      const netScore = longScore - shortScore;\n      console.log('📈 Score calculation:', {\n        longScore,\n        shortScore,\n        netScore,\n        longData: nqData.Long,\n        shortData: nqData.Short\n      });\n      setScoreHistory(prev => {\n        const newEntry = {\n          timestamp: new Date(),\n          score: netScore,\n          longScore,\n          shortScore\n        };\n        const newHistory = [...prev, newEntry];\n\n        // Keep only last 5 minutes of data\n        const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);\n        return newHistory.filter(item => item.timestamp > fiveMinutesAgo);\n      });\n    } else {\n      var _data$data, _data$data2;\n      console.log('❌ No NQ data found for score calculation');\n      console.log('🔍 Available data structure:', {\n        hasData: !!data.data,\n        hasSignalsByMarket: !!((_data$data = data.data) !== null && _data$data !== void 0 && _data$data.signals_by_market),\n        marketKeys: (_data$data2 = data.data) !== null && _data$data2 !== void 0 && _data$data2.signals_by_market ? Object.keys(data.data.signals_by_market) : 'none'\n      });\n    }\n  };\n  const formatTime = date => {\n    if (!date) return '--:--:--';\n    return date.toLocaleTimeString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ImpViz Active Trader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-indicator ${connectionStatus.toLowerCase()}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: connectionStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"last-update\",\n          children: [\"Last Update: \", formatTime(lastUpdate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"env-toggle\",\n          onClick: () => setEnvironment(env => env === 'prod' ? 'local' : 'prod'),\n          children: environment === 'prod' ? 'Production' : 'Local'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StrategyHeatmap, {\n      data: marketData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreChart, {\n      scoreHistory: scoreHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarketSection, {\n      data: marketData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NJwfgAZUcYsK5YfCe4iE7oCAaEg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","StrategyHeatmap","ScoreChart","MarketSection","jsxDEV","_jsxDEV","App","_s","environment","setEnvironment","marketData","setMarketData","scoreHistory","setScoreHistory","connectionStatus","setConnectionStatus","lastUpdate","setLastUpdate","wsRef","websocketUrl","connect","current","close","console","log","ws","WebSocket","onopen","send","JSON","stringify","type","interval","setInterval","readyState","OPEN","onmessage","event","data","parse","Object","keys","signals_by_tag_and_direction_and_market","Date","updateScoreHistory","error","onerror","onclose","code","clearInterval","setTimeout","signals_by_market","NQ","_nqData$Long","_nqData$Short","nqData","longScore","Long","final_score","shortScore","Short","netScore","longData","shortData","prev","newEntry","timestamp","score","newHistory","fiveMinutesAgo","now","filter","item","_data$data","_data$data2","hasData","hasSignalsByMarket","marketKeys","formatTime","date","toLocaleTimeString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLowerCase","onClick","env","_c","$RefreshReg$"],"sources":["/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport StrategyHeatmap from './components/StrategyHeatmap';\nimport ScoreChart from './components/ScoreChart';\nimport MarketSection from './components/MarketSection';\n\nfunction App() {\n  const [environment, setEnvironment] = useState('prod');\n  const [marketData, setMarketData] = useState({});\n  const [scoreHistory, setScoreHistory] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('DISCONNECTED');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const wsRef = useRef(null);\n\n  const websocketUrl = environment === 'local' \n    ? 'ws://localhost:8765' \n    : 'ws://134.209.184.5:8765';\n\n  useEffect(() => {\n    const connect = () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n\n      console.log(`🔌 Connecting to ${websocketUrl}`);\n      \n      try {\n        const ws = new WebSocket(websocketUrl);\n        \n        ws.onopen = () => {\n          console.log('✅ Connected successfully!');\n          setConnectionStatus('Connected');\n          ws.send(JSON.stringify({ type: 'get_latest' }));\n          \n          // Periodic requests every 5 seconds\n          const interval = setInterval(() => {\n            if (ws.readyState === WebSocket.OPEN) {\n              ws.send(JSON.stringify({ type: 'get_latest' }));\n            }\n          }, 5000);\n          \n          ws.interval = interval;\n        };\n\n        ws.onmessage = (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            console.log('📦 Received data with keys:', Object.keys(data));\n            console.log('📋 Full data structure:', data);\n            \n            if (data.type === 'pong') return;\n            \n            // Check for different data structures\n            if (data.data) {\n              console.log('🔍 Found data.data with keys:', Object.keys(data.data));\n              if (data.data.signals_by_tag_and_direction_and_market) {\n                console.log('✅ Found heatmap data in data.data');\n              }\n            }\n            \n            if (data.signals_by_tag_and_direction_and_market) {\n              console.log('✅ Found heatmap data at root level');\n            }\n            \n            // Store the complete data object\n            setMarketData(data);\n            setLastUpdate(new Date());\n            \n            // Update score history for chart\n            updateScoreHistory(data);\n            \n          } catch (error) {\n            console.error('❌ Error processing data:', error);\n          }\n        };\n\n        ws.onerror = (error) => {\n          console.error('❌ WebSocket error:', error);\n          setConnectionStatus('ERROR');\n        };\n\n        ws.onclose = (event) => {\n          console.log('🔌 WebSocket closed:', event.code);\n          setConnectionStatus('DISCONNECTED');\n          if (ws.interval) clearInterval(ws.interval);\n          \n          // Reconnect after delay\n          setTimeout(() => {\n            connect();\n          }, 5000);\n        };\n\n        wsRef.current = ws;\n      } catch (error) {\n        console.error('❌ Failed to connect:', error);\n        setConnectionStatus('ERROR');\n      }\n    };\n\n    connect();\n\n    return () => {\n      if (wsRef.current) {\n        if (wsRef.current.interval) {\n          clearInterval(wsRef.current.interval);\n        }\n        wsRef.current.close();\n      }\n    };\n  }, [websocketUrl]);\n\n  const updateScoreHistory = (data) => {\n    // Extract score data from the received data\n    if (data.data && data.data.signals_by_market && data.data.signals_by_market.NQ) {\n      const nqData = data.data.signals_by_market.NQ;\n      console.log('📊 NQ Data for score calculation:', nqData);\n      \n      const longScore = nqData.Long?.final_score || 0;\n      const shortScore = nqData.Short?.final_score || 0;\n      const netScore = longScore - shortScore;\n      \n      console.log('📈 Score calculation:', {\n        longScore,\n        shortScore,\n        netScore,\n        longData: nqData.Long,\n        shortData: nqData.Short\n      });\n      \n      setScoreHistory(prev => {\n        const newEntry = {\n          timestamp: new Date(),\n          score: netScore,\n          longScore,\n          shortScore\n        };\n        \n        const newHistory = [...prev, newEntry];\n        \n        // Keep only last 5 minutes of data\n        const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);\n        return newHistory.filter(item => item.timestamp > fiveMinutesAgo);\n      });\n    } else {\n      console.log('❌ No NQ data found for score calculation');\n      console.log('🔍 Available data structure:', {\n        hasData: !!data.data,\n        hasSignalsByMarket: !!data.data?.signals_by_market,\n        marketKeys: data.data?.signals_by_market ? Object.keys(data.data.signals_by_market) : 'none'\n      });\n    }\n  };\n\n  const formatTime = (date) => {\n    if (!date) return '--:--:--';\n    return date.toLocaleTimeString();\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>ImpViz Active Trader</h1>\n        <div className=\"connection-info\">\n          <div className={`status-indicator ${connectionStatus.toLowerCase()}`}>\n            <span className=\"status-dot\"></span>\n            <span>{connectionStatus}</span>\n          </div>\n          <div className=\"last-update\">\n            Last Update: {formatTime(lastUpdate)}\n          </div>\n          <button \n            className=\"env-toggle\"\n            onClick={() => setEnvironment(env => env === 'prod' ? 'local' : 'prod')}\n          >\n            {environment === 'prod' ? 'Production' : 'Local'}\n          </button>\n        </div>\n      </header>\n\n      {/* Strategy Metrics Heatmap */}\n      <StrategyHeatmap data={marketData} />\n\n      {/* Score Trend Chart */}\n      <ScoreChart scoreHistory={scoreHistory} />\n\n      {/* Market Data Section */}\n      <MarketSection data={marketData} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}