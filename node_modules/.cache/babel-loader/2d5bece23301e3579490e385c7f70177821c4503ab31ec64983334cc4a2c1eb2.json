{"ast":null,"code":"var _jsxFileName = \"/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/components/HistoricalChart.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoricalChart = ({\n  scoreHistory\n}) => {\n  const formatTime = timestamp => {\n    if (!timestamp) return '';\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const chartData = scoreHistory.map(item => ({\n    time: formatTime(item.timestamp),\n    long: Math.round(item.longScore),\n    short: Math.round(item.shortScore),\n    net: Math.round(item.netDifference)\n  }));\n  if (chartData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"historical-chart empty\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Score History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"historical-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Score History (5 min)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 200,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#1a1f3a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\",\n          stroke: \"#666\",\n          tick: {\n            fontSize: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#666\",\n          tick: {\n            fontSize: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: '#0a0e27',\n            border: '1px solid #1a1f3a',\n            borderRadius: '4px'\n          },\n          labelStyle: {\n            color: '#fff'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"long\",\n          stroke: \"#00ff88\",\n          strokeWidth: 2,\n          dot: false,\n          name: \"Long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"short\",\n          stroke: \"#ff4444\",\n          strokeWidth: 2,\n          dot: false,\n          name: \"Short\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"net\",\n          stroke: \"#ffaa00\",\n          strokeWidth: 2,\n          dot: false,\n          name: \"Net Difference\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = HistoricalChart;\nexport default HistoricalChart;\nvar _c;\n$RefreshReg$(_c, \"HistoricalChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","HistoricalChart","scoreHistory","formatTime","timestamp","date","Date","toLocaleTimeString","hour","minute","chartData","map","item","time","long","Math","round","longScore","short","shortScore","net","netDifference","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","tick","fontSize","contentStyle","backgroundColor","border","borderRadius","labelStyle","color","type","strokeWidth","dot","name","_c","$RefreshReg$"],"sources":["/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/components/HistoricalChart.js"],"sourcesContent":["import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst HistoricalChart = ({ scoreHistory }) => {\n  const formatTime = (timestamp) => {\n    if (!timestamp) return '';\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n  \n  const chartData = scoreHistory.map(item => ({\n    time: formatTime(item.timestamp),\n    long: Math.round(item.longScore),\n    short: Math.round(item.shortScore),\n    net: Math.round(item.netDifference)\n  }));\n  \n  if (chartData.length === 0) {\n    return (\n      <div className=\"historical-chart empty\">\n        <h3>Score History</h3>\n        <p>No data available yet</p>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"historical-chart\">\n      <h3>Score History (5 min)</h3>\n      <ResponsiveContainer width=\"100%\" height={200}>\n        <LineChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#1a1f3a\" />\n          <XAxis \n            dataKey=\"time\" \n            stroke=\"#666\"\n            tick={{ fontSize: 10 }}\n          />\n          <YAxis \n            stroke=\"#666\"\n            tick={{ fontSize: 10 }}\n          />\n          <Tooltip \n            contentStyle={{ \n              backgroundColor: '#0a0e27', \n              border: '1px solid #1a1f3a',\n              borderRadius: '4px'\n            }}\n            labelStyle={{ color: '#fff' }}\n          />\n          <Legend />\n          <Line \n            type=\"monotone\" \n            dataKey=\"long\" \n            stroke=\"#00ff88\" \n            strokeWidth={2}\n            dot={false}\n            name=\"Long\"\n          />\n          <Line \n            type=\"monotone\" \n            dataKey=\"short\" \n            stroke=\"#ff4444\" \n            strokeWidth={2}\n            dot={false}\n            name=\"Short\"\n          />\n          <Line \n            type=\"monotone\" \n            dataKey=\"net\" \n            stroke=\"#ffaa00\" \n            strokeWidth={2}\n            dot={false}\n            name=\"Net Difference\"\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default HistoricalChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}