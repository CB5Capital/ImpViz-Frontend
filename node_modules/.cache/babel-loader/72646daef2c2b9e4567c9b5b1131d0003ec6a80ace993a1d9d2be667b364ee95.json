{"ast":null,"code":"var _jsxFileName = \"/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/components/ConnectionStatus.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionStatus = ({\n  status,\n  lastUpdate,\n  connectionAttempts,\n  lastError,\n  connectionState\n}) => {\n  const isConnected = status === 'Connected';\n  const formatTime = date => {\n    if (!date) return '--:--:--';\n    return date.toLocaleTimeString();\n  };\n  const getConnectionStateText = state => {\n    const stateNames = {\n      [WebSocket.CONNECTING]: 'CONNECTING',\n      [WebSocket.OPEN]: 'OPEN',\n      [WebSocket.CLOSING]: 'CLOSING',\n      [WebSocket.CLOSED]: 'CLOSED'\n    };\n    return stateNames[state] || 'UNKNOWN';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connection-status\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-indicator ${isConnected ? 'connected' : 'disconnected'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), connectionState !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"connection-state\",\n        children: [\"(\", getConnectionStateText(connectionState), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"last-update\",\n        children: [\"Last Update: \", formatTime(lastUpdate)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), connectionAttempts > 0 && !isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-attempts\",\n        children: [\"Attempts: \", connectionAttempts]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), lastError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-error\",\n        title: lastError,\n        children: [\"Error: \", lastError.length > 50 ? lastError.substring(0, 50) + '...' : lastError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = ConnectionStatus;\nexport default ConnectionStatus;\nvar _c;\n$RefreshReg$(_c, \"ConnectionStatus\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ConnectionStatus","status","lastUpdate","connectionAttempts","lastError","connectionState","isConnected","formatTime","date","toLocaleTimeString","getConnectionStateText","state","stateNames","WebSocket","CONNECTING","OPEN","CLOSING","CLOSED","className","children","fileName","_jsxFileName","lineNumber","columnNumber","undefined","title","length","substring","_c","$RefreshReg$"],"sources":["/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/components/ConnectionStatus.js"],"sourcesContent":["import React from 'react';\n\nconst ConnectionStatus = ({ status, lastUpdate, connectionAttempts, lastError, connectionState }) => {\n  const isConnected = status === 'Connected';\n  \n  const formatTime = (date) => {\n    if (!date) return '--:--:--';\n    return date.toLocaleTimeString();\n  };\n\n  const getConnectionStateText = (state) => {\n    const stateNames = {\n      [WebSocket.CONNECTING]: 'CONNECTING',\n      [WebSocket.OPEN]: 'OPEN',\n      [WebSocket.CLOSING]: 'CLOSING',\n      [WebSocket.CLOSED]: 'CLOSED'\n    };\n    return stateNames[state] || 'UNKNOWN';\n  };\n  \n  return (\n    <div className=\"connection-status\">\n      <div className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}>\n        <span className=\"status-dot\"></span>\n        <span>{status}</span>\n        {connectionState !== undefined && (\n          <span className=\"connection-state\">({getConnectionStateText(connectionState)})</span>\n        )}\n      </div>\n      <div className=\"connection-details\">\n        <div className=\"last-update\">\n          Last Update: {formatTime(lastUpdate)}\n        </div>\n        {connectionAttempts > 0 && !isConnected && (\n          <div className=\"connection-attempts\">\n            Attempts: {connectionAttempts}\n          </div>\n        )}\n        {lastError && (\n          <div className=\"connection-error\" title={lastError}>\n            Error: {lastError.length > 50 ? lastError.substring(0, 50) + '...' : lastError}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectionStatus;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}