{"ast":null,"code":"var _jsxFileName = \"/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport StrategyHeatmap from './components/StrategyHeatmap';\nimport ScoreChart from './components/ScoreChart';\nimport MarketSection from './components/MarketSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [environment, setEnvironment] = useState('prod');\n  const [marketData, setMarketData] = useState({});\n  const [scoreHistory, setScoreHistory] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('DISCONNECTED');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const wsRef = useRef(null);\n  const websocketUrl = environment === 'local' ? 'ws://localhost:8765' : 'ws://134.209.184.5:8765';\n  useEffect(() => {\n    const connect = () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      console.log(`üîå Connecting to ${websocketUrl}`);\n      try {\n        const ws = new WebSocket(websocketUrl);\n\n        // Set a connection timeout\n        const connectionTimeout = setTimeout(() => {\n          if (ws.readyState === WebSocket.CONNECTING) {\n            console.log('‚è∞ Connection timeout, closing...');\n            ws.close();\n          }\n        }, 10000); // 10 second timeout\n\n        ws.onopen = () => {\n          clearTimeout(connectionTimeout);\n          console.log('‚úÖ Connected successfully!');\n          setConnectionStatus('Connected');\n          ws.send(JSON.stringify({\n            type: 'get_latest'\n          }));\n\n          // Periodic requests every 10 seconds to reduce server load\n          const interval = setInterval(() => {\n            if (ws.readyState === WebSocket.OPEN) {\n              ws.send(JSON.stringify({\n                type: 'get_latest'\n              }));\n            } else {\n              console.log('‚ö†Ô∏è WebSocket not open, skipping get_latest');\n            }\n          }, 10000);\n          ws.interval = interval;\n        };\n        ws.onmessage = event => {\n          try {\n            const data = JSON.parse(event.data);\n            console.log('üì¶ Received data with keys:', Object.keys(data));\n            console.log('üìã Full data structure:', data);\n            if (data.type === 'pong') return;\n\n            // Check for different data structures\n            if (data.data) {\n              console.log('üîç Found data.data with keys:', Object.keys(data.data));\n              if (data.data.signals_by_tag_and_direction_and_market) {\n                console.log('‚úÖ Found heatmap data in data.data');\n              }\n            }\n            if (data.signals_by_tag_and_direction_and_market) {\n              console.log('‚úÖ Found heatmap data at root level');\n            }\n\n            // Store the complete data object\n            setMarketData(data);\n            setLastUpdate(new Date());\n\n            // Update score history for chart\n            updateScoreHistory(data);\n          } catch (error) {\n            console.error('‚ùå Error processing data:', error);\n          }\n        };\n        ws.onerror = error => {\n          console.error('‚ùå WebSocket error:', error);\n          setConnectionStatus('ERROR');\n        };\n        ws.onclose = event => {\n          console.log('üîå WebSocket closed:', event.code, event.reason);\n          setConnectionStatus('DISCONNECTED');\n          if (ws.interval) clearInterval(ws.interval);\n\n          // Only reconnect if not a normal close\n          if (event.code !== 1000) {\n            console.log('üîÑ Reconnecting in 3 seconds...');\n            setTimeout(() => {\n              connect();\n            }, 3000);\n          }\n        };\n        wsRef.current = ws;\n      } catch (error) {\n        console.error('‚ùå Failed to connect:', error);\n        setConnectionStatus('ERROR');\n      }\n    };\n    connect();\n    return () => {\n      if (wsRef.current) {\n        if (wsRef.current.interval) {\n          clearInterval(wsRef.current.interval);\n        }\n        wsRef.current.close();\n      }\n    };\n  }, [websocketUrl]);\n  const updateScoreHistory = data => {\n    // Extract score data from active_signals_score_by_market\n    if (data.data && data.data.active_signals_score_by_market) {\n      const scoreData = data.data.active_signals_score_by_market;\n      console.log('üìä Score data:', scoreData);\n\n      // Get NQ score (or first available market)\n      const nqScore = scoreData.NQ;\n      const firstMarketScore = nqScore || Object.values(scoreData)[0];\n      if (firstMarketScore !== undefined) {\n        console.log('üìà Using score:', firstMarketScore);\n        setScoreHistory(prev => {\n          const newEntry = {\n            timestamp: new Date(),\n            score: firstMarketScore,\n            longScore: 0,\n            // We don't have individual long/short from this data\n            shortScore: 0\n          };\n\n          // Debug: Check for unexpected 0 values\n          if (firstMarketScore === 0) {\n            console.warn('‚ö†Ô∏è Got 0 score! Full score data:', scoreData);\n          }\n\n          // Add entry every time to show time progression, but limit frequency\n          const lastEntry = prev[prev.length - 1];\n          const now = new Date();\n\n          // Only add if at least 3 seconds have passed since last entry\n          if (lastEntry) {\n            const timeDiff = now - lastEntry.timestamp;\n            if (timeDiff < 3000) {\n              // 3 seconds\n              console.log('üîÑ Skipping - too recent (', timeDiff, 'ms)');\n              return prev;\n            }\n          }\n          console.log('‚ûï Adding new score entry:', newEntry);\n          const newHistory = [...prev, newEntry];\n\n          // Keep only last 5 minutes of data\n          const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);\n          return newHistory.filter(item => item.timestamp > fiveMinutesAgo);\n        });\n      }\n    } else {\n      console.log('‚ùå No active_signals_score_by_market found');\n    }\n  };\n  const formatTime = date => {\n    if (!date) return '--:--:--';\n    return date.toLocaleTimeString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ImpViz Active Trader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-indicator ${connectionStatus.toLowerCase()}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: connectionStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"last-update\",\n          children: [\"Last Update: \", formatTime(lastUpdate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"env-toggle\",\n          onClick: () => setEnvironment(env => env === 'prod' ? 'local' : 'prod'),\n          children: environment === 'prod' ? 'Production' : 'Local'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StrategyHeatmap, {\n      data: marketData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreChart, {\n      scoreHistory: scoreHistory,\n      onClearHistory: () => setScoreHistory([])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarketSection, {\n      data: marketData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NJwfgAZUcYsK5YfCe4iE7oCAaEg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","StrategyHeatmap","ScoreChart","MarketSection","jsxDEV","_jsxDEV","App","_s","environment","setEnvironment","marketData","setMarketData","scoreHistory","setScoreHistory","connectionStatus","setConnectionStatus","lastUpdate","setLastUpdate","wsRef","websocketUrl","connect","current","close","console","log","ws","WebSocket","connectionTimeout","setTimeout","readyState","CONNECTING","onopen","clearTimeout","send","JSON","stringify","type","interval","setInterval","OPEN","onmessage","event","data","parse","Object","keys","signals_by_tag_and_direction_and_market","Date","updateScoreHistory","error","onerror","onclose","code","reason","clearInterval","active_signals_score_by_market","scoreData","nqScore","NQ","firstMarketScore","values","undefined","prev","newEntry","timestamp","score","longScore","shortScore","warn","lastEntry","length","now","timeDiff","newHistory","fiveMinutesAgo","filter","item","formatTime","date","toLocaleTimeString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLowerCase","onClick","env","onClearHistory","_c","$RefreshReg$"],"sources":["/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport StrategyHeatmap from './components/StrategyHeatmap';\nimport ScoreChart from './components/ScoreChart';\nimport MarketSection from './components/MarketSection';\n\nfunction App() {\n  const [environment, setEnvironment] = useState('prod');\n  const [marketData, setMarketData] = useState({});\n  const [scoreHistory, setScoreHistory] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('DISCONNECTED');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const wsRef = useRef(null);\n\n  const websocketUrl = environment === 'local' \n    ? 'ws://localhost:8765' \n    : 'ws://134.209.184.5:8765';\n\n  useEffect(() => {\n    const connect = () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n\n      console.log(`üîå Connecting to ${websocketUrl}`);\n      \n      try {\n        const ws = new WebSocket(websocketUrl);\n        \n        // Set a connection timeout\n        const connectionTimeout = setTimeout(() => {\n          if (ws.readyState === WebSocket.CONNECTING) {\n            console.log('‚è∞ Connection timeout, closing...');\n            ws.close();\n          }\n        }, 10000); // 10 second timeout\n        \n        ws.onopen = () => {\n          clearTimeout(connectionTimeout);\n          console.log('‚úÖ Connected successfully!');\n          setConnectionStatus('Connected');\n          ws.send(JSON.stringify({ type: 'get_latest' }));\n          \n          // Periodic requests every 10 seconds to reduce server load\n          const interval = setInterval(() => {\n            if (ws.readyState === WebSocket.OPEN) {\n              ws.send(JSON.stringify({ type: 'get_latest' }));\n            } else {\n              console.log('‚ö†Ô∏è WebSocket not open, skipping get_latest');\n            }\n          }, 10000);\n          \n          ws.interval = interval;\n        };\n\n        ws.onmessage = (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            console.log('üì¶ Received data with keys:', Object.keys(data));\n            console.log('üìã Full data structure:', data);\n            \n            if (data.type === 'pong') return;\n            \n            // Check for different data structures\n            if (data.data) {\n              console.log('üîç Found data.data with keys:', Object.keys(data.data));\n              if (data.data.signals_by_tag_and_direction_and_market) {\n                console.log('‚úÖ Found heatmap data in data.data');\n              }\n            }\n            \n            if (data.signals_by_tag_and_direction_and_market) {\n              console.log('‚úÖ Found heatmap data at root level');\n            }\n            \n            // Store the complete data object\n            setMarketData(data);\n            setLastUpdate(new Date());\n            \n            // Update score history for chart\n            updateScoreHistory(data);\n            \n          } catch (error) {\n            console.error('‚ùå Error processing data:', error);\n          }\n        };\n\n        ws.onerror = (error) => {\n          console.error('‚ùå WebSocket error:', error);\n          setConnectionStatus('ERROR');\n        };\n\n        ws.onclose = (event) => {\n          console.log('üîå WebSocket closed:', event.code, event.reason);\n          setConnectionStatus('DISCONNECTED');\n          if (ws.interval) clearInterval(ws.interval);\n          \n          // Only reconnect if not a normal close\n          if (event.code !== 1000) {\n            console.log('üîÑ Reconnecting in 3 seconds...');\n            setTimeout(() => {\n              connect();\n            }, 3000);\n          }\n        };\n\n        wsRef.current = ws;\n      } catch (error) {\n        console.error('‚ùå Failed to connect:', error);\n        setConnectionStatus('ERROR');\n      }\n    };\n\n    connect();\n\n    return () => {\n      if (wsRef.current) {\n        if (wsRef.current.interval) {\n          clearInterval(wsRef.current.interval);\n        }\n        wsRef.current.close();\n      }\n    };\n  }, [websocketUrl]);\n\n  const updateScoreHistory = (data) => {\n    // Extract score data from active_signals_score_by_market\n    if (data.data && data.data.active_signals_score_by_market) {\n      const scoreData = data.data.active_signals_score_by_market;\n      console.log('üìä Score data:', scoreData);\n      \n      // Get NQ score (or first available market)\n      const nqScore = scoreData.NQ;\n      const firstMarketScore = nqScore || Object.values(scoreData)[0];\n      \n      if (firstMarketScore !== undefined) {\n        console.log('üìà Using score:', firstMarketScore);\n        \n        setScoreHistory(prev => {\n          const newEntry = {\n            timestamp: new Date(),\n            score: firstMarketScore,\n            longScore: 0, // We don't have individual long/short from this data\n            shortScore: 0\n          };\n          \n          // Debug: Check for unexpected 0 values\n          if (firstMarketScore === 0) {\n            console.warn('‚ö†Ô∏è Got 0 score! Full score data:', scoreData);\n          }\n          \n          // Add entry every time to show time progression, but limit frequency\n          const lastEntry = prev[prev.length - 1];\n          const now = new Date();\n          \n          // Only add if at least 3 seconds have passed since last entry\n          if (lastEntry) {\n            const timeDiff = now - lastEntry.timestamp;\n            if (timeDiff < 3000) { // 3 seconds\n              console.log('üîÑ Skipping - too recent (', timeDiff, 'ms)');\n              return prev;\n            }\n          }\n          \n          console.log('‚ûï Adding new score entry:', newEntry);\n          const newHistory = [...prev, newEntry];\n          \n          // Keep only last 5 minutes of data\n          const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);\n          return newHistory.filter(item => item.timestamp > fiveMinutesAgo);\n        });\n      }\n    } else {\n      console.log('‚ùå No active_signals_score_by_market found');\n    }\n  };\n\n  const formatTime = (date) => {\n    if (!date) return '--:--:--';\n    return date.toLocaleTimeString();\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>ImpViz Active Trader</h1>\n        <div className=\"connection-info\">\n          <div className={`status-indicator ${connectionStatus.toLowerCase()}`}>\n            <span className=\"status-dot\"></span>\n            <span>{connectionStatus}</span>\n          </div>\n          <div className=\"last-update\">\n            Last Update: {formatTime(lastUpdate)}\n          </div>\n          <button \n            className=\"env-toggle\"\n            onClick={() => setEnvironment(env => env === 'prod' ? 'local' : 'prod')}\n          >\n            {environment === 'prod' ? 'Production' : 'Local'}\n          </button>\n        </div>\n      </header>\n\n      {/* Strategy Metrics Heatmap */}\n      <StrategyHeatmap data={marketData} />\n\n      {/* Score Trend Chart */}\n      <ScoreChart \n        scoreHistory={scoreHistory} \n        onClearHistory={() => setScoreHistory([])}\n      />\n\n      {/* Market Data Section */}\n      <MarketSection data={marketData} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}