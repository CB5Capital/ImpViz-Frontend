{"ast":null,"code":"var _jsxFileName = \"/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport MarketSummary from './components/MarketSummary';\nimport MarketSelector from './components/MarketSelector';\nimport SignalDisplay from './components/SignalDisplay';\nimport HistoricalChart from './components/HistoricalChart';\nimport WebSocketDebug from './components/WebSocketDebug';\nimport { useWebSocket } from './hooks/useWebSocket';\nimport { convertSignalsToMarketFormat } from './utils/dataProcessing';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [environment, setEnvironment] = useState('prod');\n  const [selectedMarket, setSelectedMarket] = useState('');\n  const [marketData, setMarketData] = useState({});\n  const [scoreHistory, setScoreHistory] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('DISCONNECTED');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const websocketUrl = environment === 'local' ? 'ws://localhost:8765' : 'ws://134.209.184.5:8765';\n  console.log('Current WebSocket URL:', websocketUrl);\n  console.log('Environment:', environment);\n  const onMessage = useCallback(data => {\n    console.log('Received WebSocket message:', data);\n    if (data.type === 'error') {\n      console.error('WebSocket error:', data.message);\n      return;\n    }\n\n    // Check if we have actual data\n    if (!data || !data.data && !data.signals_by_market) {\n      console.warn('No data in message:', data);\n      return;\n    }\n\n    // Handle different data formats\n    let processedData;\n\n    // Direct signals_by_market at root level\n    if (data.signals_by_market) {\n      console.log('Processing signals_by_market format');\n      processedData = convertSignalsToMarketFormat(data);\n    }\n    // Data wrapped in 'data' property\n    else if (data.data) {\n      const rawData = data.data;\n      if (rawData.signals_by_market) {\n        console.log('Processing nested signals_by_market format');\n        processedData = convertSignalsToMarketFormat(rawData);\n      } else {\n        console.log('Using data as-is');\n        processedData = rawData;\n      }\n    }\n    // Already in correct format\n    else if (data.ES || data.NQ || Object.keys(data).some(k => k.match(/^[A-Z]+$/))) {\n      console.log('Data appears to be in market format already');\n      processedData = data;\n    }\n    console.log('Processed market data:', processedData);\n    if (processedData && Object.keys(processedData).length > 0) {\n      setMarketData(processedData);\n      setLastUpdate(new Date());\n\n      // Auto-select first market if none selected or current selection not available\n      const markets = Object.keys(processedData);\n      if (!selectedMarket || !processedData[selectedMarket]) {\n        const firstMarket = markets[0];\n        console.log('Auto-selecting market:', firstMarket);\n        setSelectedMarket(firstMarket);\n      }\n      if (processedData[selectedMarket]) {\n        updateScoreHistory(processedData[selectedMarket]);\n      }\n    } else {\n      console.warn('No valid market data after processing');\n    }\n  }, [selectedMarket]);\n  const {\n    sendMessage,\n    isConnected,\n    connectionAttempts,\n    lastError,\n    connectionState\n  } = useWebSocket(websocketUrl, onMessage, () => {\n    console.log('WebSocket connected successfully!');\n    setConnectionStatus('Connected');\n  }, () => {\n    console.log('WebSocket disconnected');\n    setConnectionStatus('DISCONNECTED');\n  });\n  useEffect(() => {\n    if (isConnected) {\n      // Send initial request\n      sendMessage({\n        type: 'get_latest'\n      });\n\n      // Set up polling with error handling\n      const interval = setInterval(() => {\n        if (isConnected) {\n          sendMessage({\n            type: 'get_latest'\n          });\n        }\n      }, 5000); // Reduced frequency to 5 seconds to reduce server load\n\n      return () => clearInterval(interval);\n    }\n  }, [isConnected, sendMessage]);\n  const updateScoreHistory = marketInfo => {\n    const longData = marketInfo.Long || {};\n    const shortData = marketInfo.Short || {};\n    const longScore = longData.final_score || 0;\n    const shortScore = shortData.final_score || 0;\n    const netDifference = Math.abs(longScore - shortScore);\n    const winner = longScore > shortScore ? 'LONG' : shortScore > longScore ? 'SHORT' : 'NEUTRAL';\n    setScoreHistory(prev => {\n      const newHistory = [...prev, {\n        timestamp: new Date(),\n        longScore,\n        shortScore,\n        netDifference,\n        winner\n      }];\n      const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);\n      return newHistory.filter(item => item.timestamp > fiveMinutesAgo);\n    });\n  };\n  const availableMarkets = Object.keys(marketData).sort();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(WebSocketDebug, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ImpViz Active Trader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConnectionStatus, {\n        status: connectionStatus,\n        lastUpdate: lastUpdate,\n        connectionAttempts: connectionAttempts,\n        lastError: lastError,\n        connectionState: connectionState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(MarketSelector, {\n        markets: availableMarkets,\n        selectedMarket: selectedMarket,\n        onMarketChange: setSelectedMarket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"env-toggle\",\n        onClick: () => setEnvironment(env => env === 'prod' ? 'local' : 'prod'),\n        children: environment === 'prod' ? 'Production' : 'Local'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarketSummary, {\n      marketData: marketData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'rgba(0,0,0,0.5)',\n        padding: '10px',\n        margin: '10px 0',\n        borderRadius: '5px',\n        fontSize: '11px',\n        color: '#888'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Markets available: \", availableMarkets.join(', ') || 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Selected market: \", selectedMarket]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Has data for selected: \", marketData[selectedMarket] ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Data keys: \", Object.keys(marketData).join(', ') || 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), marketData[selectedMarket] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SignalDisplay, {\n        marketData: marketData[selectedMarket],\n        marketName: selectedMarket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HistoricalChart, {\n        scoreHistory: scoreHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center',\n        color: '#666'\n      },\n      children: [\"No data available for \", selectedMarket]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wy+e300G+S8/xvHOQyHjHX3jf2w=\", false, function () {\n  return [useWebSocket];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ConnectionStatus","MarketSummary","MarketSelector","SignalDisplay","HistoricalChart","WebSocketDebug","useWebSocket","convertSignalsToMarketFormat","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","environment","setEnvironment","selectedMarket","setSelectedMarket","marketData","setMarketData","scoreHistory","setScoreHistory","connectionStatus","setConnectionStatus","lastUpdate","setLastUpdate","websocketUrl","console","log","onMessage","data","type","error","message","signals_by_market","warn","processedData","rawData","ES","NQ","Object","keys","some","k","match","length","Date","markets","firstMarket","updateScoreHistory","sendMessage","isConnected","connectionAttempts","lastError","connectionState","interval","setInterval","clearInterval","marketInfo","longData","Long","shortData","Short","longScore","final_score","shortScore","netDifference","Math","abs","winner","prev","newHistory","timestamp","fiveMinutesAgo","now","filter","item","availableMarkets","sort","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","onMarketChange","onClick","env","style","background","padding","margin","borderRadius","fontSize","color","join","marketName","textAlign","_c","$RefreshReg$"],"sources":["/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport MarketSummary from './components/MarketSummary';\nimport MarketSelector from './components/MarketSelector';\nimport SignalDisplay from './components/SignalDisplay';\nimport HistoricalChart from './components/HistoricalChart';\nimport WebSocketDebug from './components/WebSocketDebug';\nimport { useWebSocket } from './hooks/useWebSocket';\nimport { convertSignalsToMarketFormat } from './utils/dataProcessing';\n\nfunction App() {\n  const [environment, setEnvironment] = useState('prod');\n  const [selectedMarket, setSelectedMarket] = useState('');\n  const [marketData, setMarketData] = useState({});\n  const [scoreHistory, setScoreHistory] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('DISCONNECTED');\n  const [lastUpdate, setLastUpdate] = useState(null);\n\n  const websocketUrl = environment === 'local' \n    ? 'ws://localhost:8765' \n    : 'ws://134.209.184.5:8765';\n\n  console.log('Current WebSocket URL:', websocketUrl);\n  console.log('Environment:', environment);\n\n  const onMessage = useCallback((data) => {\n    console.log('Received WebSocket message:', data);\n    \n    if (data.type === 'error') {\n      console.error('WebSocket error:', data.message);\n      return;\n    }\n\n    // Check if we have actual data\n    if (!data || (!data.data && !data.signals_by_market)) {\n      console.warn('No data in message:', data);\n      return;\n    }\n\n    // Handle different data formats\n    let processedData;\n    \n    // Direct signals_by_market at root level\n    if (data.signals_by_market) {\n      console.log('Processing signals_by_market format');\n      processedData = convertSignalsToMarketFormat(data);\n    }\n    // Data wrapped in 'data' property\n    else if (data.data) {\n      const rawData = data.data;\n      if (rawData.signals_by_market) {\n        console.log('Processing nested signals_by_market format');\n        processedData = convertSignalsToMarketFormat(rawData);\n      } else {\n        console.log('Using data as-is');\n        processedData = rawData;\n      }\n    }\n    // Already in correct format\n    else if (data.ES || data.NQ || Object.keys(data).some(k => k.match(/^[A-Z]+$/))) {\n      console.log('Data appears to be in market format already');\n      processedData = data;\n    }\n    \n    console.log('Processed market data:', processedData);\n    \n    if (processedData && Object.keys(processedData).length > 0) {\n      setMarketData(processedData);\n      setLastUpdate(new Date());\n      \n      // Auto-select first market if none selected or current selection not available\n      const markets = Object.keys(processedData);\n      if (!selectedMarket || !processedData[selectedMarket]) {\n        const firstMarket = markets[0];\n        console.log('Auto-selecting market:', firstMarket);\n        setSelectedMarket(firstMarket);\n      }\n      \n      if (processedData[selectedMarket]) {\n        updateScoreHistory(processedData[selectedMarket]);\n      }\n    } else {\n      console.warn('No valid market data after processing');\n    }\n  }, [selectedMarket]);\n\n  const { sendMessage, isConnected, connectionAttempts, lastError, connectionState } = useWebSocket(\n    websocketUrl,\n    onMessage,\n    () => {\n      console.log('WebSocket connected successfully!');\n      setConnectionStatus('Connected');\n    },\n    () => {\n      console.log('WebSocket disconnected');\n      setConnectionStatus('DISCONNECTED');\n    }\n  );\n\n  useEffect(() => {\n    if (isConnected) {\n      // Send initial request\n      sendMessage({ type: 'get_latest' });\n      \n      // Set up polling with error handling\n      const interval = setInterval(() => {\n        if (isConnected) {\n          sendMessage({ type: 'get_latest' });\n        }\n      }, 5000); // Reduced frequency to 5 seconds to reduce server load\n      \n      return () => clearInterval(interval);\n    }\n  }, [isConnected, sendMessage]);\n\n  const updateScoreHistory = (marketInfo) => {\n    const longData = marketInfo.Long || {};\n    const shortData = marketInfo.Short || {};\n    \n    const longScore = longData.final_score || 0;\n    const shortScore = shortData.final_score || 0;\n    \n    const netDifference = Math.abs(longScore - shortScore);\n    const winner = longScore > shortScore ? 'LONG' : shortScore > longScore ? 'SHORT' : 'NEUTRAL';\n    \n    setScoreHistory(prev => {\n      const newHistory = [...prev, {\n        timestamp: new Date(),\n        longScore,\n        shortScore,\n        netDifference,\n        winner\n      }];\n      \n      const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);\n      return newHistory.filter(item => item.timestamp > fiveMinutesAgo);\n    });\n  };\n\n  const availableMarkets = Object.keys(marketData).sort();\n\n  return (\n    <div className=\"app\">\n      <WebSocketDebug />\n      <header className=\"app-header\">\n        <h1>ImpViz Active Trader</h1>\n        <ConnectionStatus \n          status={connectionStatus} \n          lastUpdate={lastUpdate} \n          connectionAttempts={connectionAttempts}\n          lastError={lastError}\n          connectionState={connectionState}\n        />\n      </header>\n      \n      <div className=\"controls\">\n        <MarketSelector \n          markets={availableMarkets}\n          selectedMarket={selectedMarket}\n          onMarketChange={setSelectedMarket}\n        />\n        <button \n          className=\"env-toggle\"\n          onClick={() => setEnvironment(env => env === 'prod' ? 'local' : 'prod')}\n        >\n          {environment === 'prod' ? 'Production' : 'Local'}\n        </button>\n      </div>\n\n      <MarketSummary marketData={marketData} />\n      \n      {/* Debug info */}\n      <div style={{ \n        background: 'rgba(0,0,0,0.5)', \n        padding: '10px', \n        margin: '10px 0',\n        borderRadius: '5px',\n        fontSize: '11px',\n        color: '#888'\n      }}>\n        <div>Markets available: {availableMarkets.join(', ') || 'None'}</div>\n        <div>Selected market: {selectedMarket}</div>\n        <div>Has data for selected: {marketData[selectedMarket] ? 'Yes' : 'No'}</div>\n        <div>Data keys: {Object.keys(marketData).join(', ') || 'None'}</div>\n      </div>\n      \n      {marketData[selectedMarket] ? (\n        <>\n          <SignalDisplay \n            marketData={marketData[selectedMarket]}\n            marketName={selectedMarket}\n          />\n          <HistoricalChart scoreHistory={scoreHistory} />\n        </>\n      ) : (\n        <div style={{\n          padding: '20px',\n          textAlign: 'center',\n          color: '#666'\n        }}>\n          No data available for {selectedMarket}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}