{"ast":null,"code":"var _jsxFileName = \"/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/components/ScoreHistoryTable.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreHistoryTable = ({\n  scoreHistory,\n  regimeData\n}) => {\n  // Combine score and regime data, show last 10 entries\n  const combinedHistory = scoreHistory.slice(-10).map(entry => {\n    const regime = (regimeData === null || regimeData === void 0 ? void 0 : regimeData.NQ) || null;\n    return {\n      ...entry,\n      regime: regime\n    };\n  });\n  const getScoreColor = score => {\n    if (score >= 0) return '#00ff88';\n    return '#ff4444';\n  };\n  const getRegimeColor = regime => {\n    if (regime === null || regime === undefined) return '#666';\n    if (regime >= 2) return '#00ff88';\n    if (regime >= 1) return '#ffaa00';\n    return '#ff4444';\n  };\n  const detectRegimeShift = (currentRegime, index) => {\n    var _combinedHistory;\n    if (index === 0 || currentRegime === null) return false;\n    const previousRegime = (_combinedHistory = combinedHistory[index - 1]) === null || _combinedHistory === void 0 ? void 0 : _combinedHistory.regime;\n    return previousRegime !== null && Math.floor(currentRegime) !== Math.floor(previousRegime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-history-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"SCORE & REGIME HISTORY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), combinedHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waiting-message\",\n      children: \"No score history yet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell time-col\",\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell score-col\",\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell regime-col\",\n          children: \"Regime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-rows\",\n        children: combinedHistory.map((entry, index) => {\n          const isRegimeShift = detectRegimeShift(entry.regime, index);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `history-row ${isRegimeShift ? 'regime-shift' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-cell time-col\",\n              children: entry.timestamp.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-cell score-col\",\n              style: {\n                color: getScoreColor(entry.score)\n              },\n              children: entry.score.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-cell regime-col\",\n              style: {\n                color: getRegimeColor(entry.regime),\n                fontWeight: isRegimeShift ? 'bold' : 'normal'\n              },\n              children: entry.regime !== null ? Math.floor(entry.regime) : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = ScoreHistoryTable;\nexport default ScoreHistoryTable;\nvar _c;\n$RefreshReg$(_c, \"ScoreHistoryTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ScoreHistoryTable","scoreHistory","regimeData","combinedHistory","slice","map","entry","regime","NQ","getScoreColor","score","getRegimeColor","undefined","detectRegimeShift","currentRegime","index","_combinedHistory","previousRegime","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","isRegimeShift","timestamp","toLocaleTimeString","hour","minute","second","style","color","toFixed","fontWeight","_c","$RefreshReg$"],"sources":["/Users/viktorkardvik/Code/CB5Capital/ImpViz/Frontend/TradingBarReact/src/components/ScoreHistoryTable.js"],"sourcesContent":["import React from 'react';\n\nconst ScoreHistoryTable = ({ scoreHistory, regimeData }) => {\n  // Combine score and regime data, show last 10 entries\n  const combinedHistory = scoreHistory.slice(-10).map(entry => {\n    const regime = regimeData?.NQ || null;\n    return {\n      ...entry,\n      regime: regime\n    };\n  });\n\n  const getScoreColor = (score) => {\n    if (score >= 0) return '#00ff88';\n    return '#ff4444';\n  };\n\n  const getRegimeColor = (regime) => {\n    if (regime === null || regime === undefined) return '#666';\n    if (regime >= 2) return '#00ff88';\n    if (regime >= 1) return '#ffaa00';\n    return '#ff4444';\n  };\n\n  const detectRegimeShift = (currentRegime, index) => {\n    if (index === 0 || currentRegime === null) return false;\n    const previousRegime = combinedHistory[index - 1]?.regime;\n    return previousRegime !== null && Math.floor(currentRegime) !== Math.floor(previousRegime);\n  };\n\n  return (\n    <div className=\"score-history-section\">\n      <h3>SCORE & REGIME HISTORY</h3>\n      \n      {combinedHistory.length === 0 ? (\n        <div className=\"waiting-message\">No score history yet...</div>\n      ) : (\n        <div className=\"history-table\">\n          {/* Header */}\n          <div className=\"history-header\">\n            <div className=\"header-cell time-col\">Time</div>\n            <div className=\"header-cell score-col\">Score</div>\n            <div className=\"header-cell regime-col\">Regime</div>\n          </div>\n          \n          {/* Data Rows */}\n          <div className=\"history-rows\">\n            {combinedHistory.map((entry, index) => {\n              const isRegimeShift = detectRegimeShift(entry.regime, index);\n              \n              return (\n                <div \n                  key={index}\n                  className={`history-row ${isRegimeShift ? 'regime-shift' : ''}`}\n                >\n                  <div className=\"data-cell time-col\">\n                    {entry.timestamp.toLocaleTimeString([], { \n                      hour: '2-digit', \n                      minute: '2-digit', \n                      second: '2-digit' \n                    })}\n                  </div>\n                  <div \n                    className=\"data-cell score-col\"\n                    style={{ color: getScoreColor(entry.score) }}\n                  >\n                    {entry.score.toFixed(1)}\n                  </div>\n                  <div \n                    className=\"data-cell regime-col\"\n                    style={{ \n                      color: getRegimeColor(entry.regime),\n                      fontWeight: isRegimeShift ? 'bold' : 'normal'\n                    }}\n                  >\n                    {entry.regime !== null ? Math.floor(entry.regime) : '-'}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScoreHistoryTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}